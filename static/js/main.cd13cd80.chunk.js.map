{"version":3,"sources":["components/Header.js","components/Search.js","components/Select.js","components/Card.js","components/List.js","components/HomePage.js","components/Details.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","this","mode","onClick","changeMode","modeText","Component","Search","type","placeholder","onChange","e","onKeywordChange","onBlur","onFocusOut","Select","onSelectedRegion","id","value","Card","to","title","toLowerCase","src","flagImg","alt","populationNum","toString","replace","regionIn","capitalCity","List","countriesData","map","el","i","key","alpha3Code","name","flag","population","region","capital","HomePage","keyword","target","filteredArr","allCountries","filter","indexOf","setState","countries","onSelected","LoadMore","countriesLoad","slice","state","n","fetch","then","res","json","data","console","log","Details","country","match","params","currentCountry","countriesQuery","require","allCountriesList","length","nativeName","subregion","topLevelDomain","currencies","languages","borders","getCountry","NotFound","App","inner","innerText","exact","path","render","component","React","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd13cd80.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <nav className={this.props.mode ? \"Header dark-mode-el\" : \"Header light-mode-el\"}>\r\n                <h2>Where in the world?</h2>\r\n                <button className={this.props.mode ? \"btn dark-mode-el\" : \"btn light-mode-el\"} onClick={this.props.changeMode}>\r\n                <i className={(this.props.mode ? \"far fa-moon\": \"fas fa-moon\")}></i>\r\n                    {this.props.modeText}\r\n                </button>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Search cols col-lg-5 col-md-5 col-sm-12 col-sx-12\">\r\n                <input className={this.props.mode ? \"form-control form-dark-mode\" : \"form-control form-light-mode\"} type=\"text\" placeholder=\"&#x1F50D;  Search for a country ...\" onChange={(e) => this.props.onKeywordChange(e)} onBlur={(e) => this.props.onFocusOut(e) } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react'\r\n\r\nclass Select extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Select cols col-lg-3 col-md-5\">\r\n                <select onChange={(e) => this.props.onSelectedRegion(e)} onBlur={(e) => this.props.onFocusOut(e) } id=\"inputState\" className={this.props.mode ? \"form-control form-dark-mode\" : \"form-control form-light-mode\"} >\r\n                    <option value=\"\">Filter by region</option>\r\n                    <option value=\"africa\">Africa</option>\r\n                    <option value=\"americas\">Americas</option>\r\n                    <option value=\"asia\">Asia</option>\r\n                    <option value=\"europe\">Europe</option>\r\n                    <option value=\"oceania\">Oceania</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div className=\"Card cols col-lg-3 col-md-6 col-sm-12 col-xs-12\">\r\n            <Link to={\"/details/\" + props.title.toLowerCase()}>\r\n            <div className={props.mode ? \"card h-100 dark-mode-el\" : \"card h-100 light-mode-el\"}>\r\n\t\t\t\t<img src={props.flagImg} className=\"card-img-top\" alt={props.title} />\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h5 className=\"card-title\">{props.title}</h5>\r\n\t\t\t\t\t<p className=\"card-text\">Population: <span className=\"grey\">{props.populationNum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\t\r\n\t\t\t\t\t<p className=\"card-text\">Region: <span className=\"grey\">{props.regionIn}</span></p>\t\r\n                    <p className=\"card-text\">Capital: <span className=\"grey\">{props.capitalCity}</span></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            </Link>\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst List = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"row \">\r\n\t\t\t{props.countriesData &&\r\n\t\t\t\tprops.countriesData.map((el, i) => (\r\n\t\t\t\t\t<Card mode={props.mode} modeText={props.modeText} changeMode={props.changeMode}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tid={el.alpha3Code}\r\n\t\t\t\t\t\ttitle={el.name}\r\n\t\t\t\t\t\tflagImg={el.flag}\r\n\t\t\t\t\t\tpopulationNum={el.population}\r\n\t\t\t\t\t\tregionIn={el.region}\r\n\t\t\t\t\t\tcapitalCity={el.capital}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Select from './Select';\r\nimport List from './List';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.allCountries = [];\r\n\r\n\t\tthis.state = {\r\n            countries: [],\r\n            n: 16\r\n\t\t};\r\n    }\r\n\r\n    componentDidMount() {\r\n\t\tfetch('https://restcountries.eu/rest/v2/all')\r\n\t\t.then((res) => res.json())\r\n\t\t.then((data) => {\r\n            this.allCountries = data.slice();\r\n            \r\n\t\t\tthis.setState({\r\n\t\t\t\tcountries: this.allCountries.slice(0, 8) // if no load more, than use .slice() for all data\r\n\t\t\t});\r\n\t\t\tconsole.log(data); \r\n            console.log(this.allCountries); \r\n        });\r\n\t}\r\n\r\n    // Function for filtering by keyword entered in input field\r\n    onChange = (e) => {\r\n        let keyword = e.target.value;\r\n        let filteredArr = this.allCountries.filter(el => (el.name.toLowerCase().indexOf(keyword.toLowerCase()) > -1 ));\r\n        this.setState({ countries: filteredArr });\r\n    }\r\n\r\n    // Function to empty input field off-focus\r\n    onFocusOut = (e) => {\r\n        e.target.value = \"\";  \r\n    }\r\n\r\n    // Function for filtering by selected option field for region\r\n    onSelected = (e) => {\r\n        if (e.target.value === \"\") {\r\n            this.setState({ countries: this.allCountries })\r\n        } else if (e.target.value === \"africa\") {\r\n            this.setState({ countries: this.allCountries.filter(el => el.region === 'Africa')})\r\n        } else if (e.target.value === \"americas\") {\r\n            this.setState({ countries: this.allCountries.filter(el => el.region === 'Americas')})\r\n        } else if (e.target.value === \"asia\") {\r\n            this.setState({ countries: this.allCountries.filter(el => el.region === 'Asia')})\r\n        } else if (e.target.value === 'europe') {\r\n            this.setState({ countries: this.allCountries.filter(el => el.region === 'Europe')})\r\n        } else if (e.target.value === 'oceania') {\r\n            this.setState({ countries: this.allCountries.filter(el => el.region === 'Oceania')})\r\n        }\r\n    }\r\n\r\n    // Function for Load more button, set to load + 8 more cards \r\n    LoadMore = () => {\r\n        let countriesLoad = this.allCountries.slice(0, this.state.n);\r\n        this.setState({\r\n            countries: countriesLoad,\r\n            n: this.state.n + 8\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"HomePage container-fluid\">\r\n                <div className=\"row search-select\">\r\n                    <Search onKeywordChange={this.onChange} onFocusOut={this.onFocusOut} mode={this.props.mode} modeText={this.props.modeText} changeMode={this.props.changeMode} />\r\n                    <Select onSelectedRegion={this.onSelected} onFocusOut={this.onFocusOut} mode={this.props.mode} modeText={this.props.modeText} changeMode={this.props.changeMode} />\r\n                </div>\r\n                <div className=\"Homepage-row\">\r\n                    <List countriesData={this.state.countries} mode={this.props.mode} modeText={this.props.modeText} changeMode={this.props.changeMode} />\r\n                </div>\r\n                <div className=\"row row-load-more\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-sx-12 d-flex justify-content-center\">\r\n                        <button className={this.props.mode ? \"btn btn-load-more form-dark-mode\" : \"btn btn-load-more form-light-mode\"} onClick={this.LoadMore} >Load more</button> \r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// install package: npm i countries-code\r\nimport { countriesQuery } from \"countries-code\";\r\n\r\nclass Details extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           country: [] \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://restcountries.eu/rest/v2/name/${this.props.match.params.currentCountry}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                country: data.slice()\r\n            });\r\n            console.log(data); \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const countriesQuery = require(\"countries-code\"); \r\n        console.log(countriesQuery.allCountriesList()); \r\n\r\n        return (\r\n            <div className=\"Details\">\r\n                <div className=\"row row-back\">\r\n                    <div className=\"cols col-lg-12 col-md-12 col-sm-12 col-sx-12\">\r\n                        <Link className={this.props.mode ? \"btn btn-back form-dark-mode\" : \"btn btn-back form-light-mode\"} to=\"/\">&#x27F5; &nbsp; Back </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-flag-text\">\r\n                    <div className=\"cols col-lg-5 col-md-12 col-sm-12 col-sx-12\">\r\n                        <img className=\"img-flag\" src={this.state.country.length && this.state.country[0].flag} alt={this.state.country.name} />\r\n                    </div>\r\n                    <div className=\"cols col-lg-5 col-md-12 col-sm-12 col-sx-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"cols col-lg-12 col-md-12 col-sm-12 col-sx-12\">\r\n                                <h3>{this.state.country.length && this.state.country[0].name}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"cols col-lg-6 col-md-12 col-sm-12 col-sx-12 text\">\r\n                                <p>Native Name: <span className=\"grey\">{this.state.country.length && this.state.country[0].nativeName}</span></p>\r\n                                <p>Population: <span className=\"grey\">{this.state.country.length && this.state.country[0].population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></p>\r\n                                <p>Region: <span className=\"grey\">{this.state.country.length && this.state.country[0].region}</span></p>\r\n                                <p>Sub Region: <span className=\"grey\">{this.state.country.length && this.state.country[0].subregion}</span></p>\r\n                                <p>Capital: <span className=\"grey\">{this.state.country.length && this.state.country[0].capital}</span></p>\r\n                            </div>\r\n                            <div className=\"cols col-lg-6 col-md-12 col-sm-12 col-xs-12\">\r\n                            <p>Top Level Domain: <span className=\"grey\">{this.state.country.length && this.state.country[0].topLevelDomain[0]}</span></p>\r\n                            <p>Currencies: <span className=\"grey\">{this.state.country.length && this.state.country[0].currencies[0].name}</span></p>\r\n                            <p>Languages: {this.state.country.length && this.state.country[0].languages.map((el, i) => (<span className=\"languages grey\" key={i}>{el.name}</span>))}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                <div className=\"cols col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <p>Border Countries: {this.state.country.length && this.state.country[0].borders.map((el, i) => (<span className={this.props.mode ? \"borders grey dark-mode-el\" : \"borders grey light-mode-borders\"} key={i} > {countriesQuery.getCountry(el)} </span>))}</p>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"NotFound\">\r\n            <h1>Page Not Found</h1>\r\n            <Link to=\"/\" ><button className=\"btn dark-mode-el\">&#x27F5;  Go Back To Home Page</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport Details from './components/Details';\nimport NotFound from './components/NotFound';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            inner: true,\n            innerText: 'Light Mode'\n        }\n\t}\n\n\tchangeMode = () => {\n        if (!this.state.inner) {\n            this.setState({\n                inner: true,\n                innerText: \"Light Mode\"\n            });\n        } else {\n            this.setState({\n                inner: false,\n                innerText: \"Dark Mode\"\n            });\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className={this.state.inner ? \"App dark-mode\" : \"App light-mode\"}>\n\t\t\t\t\t<Header mode={this.state.inner} modeText={this.state.innerText} changeMode={this.changeMode} />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render={() => <HomePage mode={this.state.inner} changeMode={this.changeMode} />} />\n\t\t\t\t\t\t<Route path=\"/details/:currentCountry\" render={(props) => <Details mode={this.state.inner}  changeMode={this.changeMode} {...props} /> } />\n\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}